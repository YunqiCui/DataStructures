        //逐步推导 交换法插入
        //希尔排序的第一轮排序
        //第一轮排序，将10个数据分成了5组
        int temp = 0;
        for (int i = 5; i < arr.length; i++) {
            //遍历各组中，所有的元素(步长等于5)
            for (int j = i - 5; j >= 0; j -= 5) {
                //如果当前元素大于，加上步长后的那个元素,说明需要交换
                if (arr[j] > arr[j + 5]) {
                    temp = arr[j];
                    arr[j] = arr[j + 5];
                    arr[j + 5] = temp;
                }
            }
        }

        //希尔排序的第二轮排序
        //第二轮排序，将10个数据分成了5/2组，2组
        for (int i = 2; i < arr.length; i++) {
            //遍历各组中，所有的元素(步长等于2)
            for (int j = i - 2; j >= 0; j -= 2) {
                //如果当前元素大于，加上步长后的那个元素,说明需要交换
                if (arr[j] > arr[j + 2]) {
                    temp = arr[j];
                    arr[j] = arr[j + 2];
                    arr[j + 2] = temp;
                }
            }
        }

        //希尔排序的第三轮排序
        //第三轮排序，将10个数据分成了5/2/2组，1组
        for (int i = 1; i < arr.length; i++) {
            //遍历各组中，所有的元素(步长等于1)
            for (int j = i - 1; j >= 0; j -= 1) {
                //如果当前元素大于，加上步长后的那个元素,说明需要交换
                if (arr[j] > arr[j + 1]) {
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }

整合交换法希尔排序
/**
     * 交换法插入排序
     * @param arr
     */
   public static void shellSort(int[] arr) {

        //交换法插入
        int temp = 0;
        int count =0;
        for (int gap = arr.length/2; gap > 0; gap /=2) {

            for (int i = gap; i < arr.length; i++) {
                //遍历各组中，所有的元素(步长等于gap)
                for (int j = i - gap; j >= 0; j -= gap) {
                    //如果当前元素大于，加上步长后的那个元素,说明需要交换
                    if (arr[j] > arr[j + gap]) {
                        temp = arr[j];
                        arr[j] = arr[j + gap];
                        arr[j + gap] = temp;
                    }
                }
            }
//            System.out.println("希尔排序第"+(++count)+ Arrays.toString(arr));
        }
    }